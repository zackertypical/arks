apiVersion: v1
kind: Service
metadata:
  name: arks-gateway-plugins
  namespace: arks-operator-system
spec:
  selector:
    app: arks-gateway-plugins
  ports:
    - protocol: TCP
      port: 50052
      targetPort: 50052
    - protocol: TCP
      port: 8080
      targetPort: metrics
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: arks-gateway-plugins
  namespace: arks-operator-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: arks-gateway-plugins
  namespace: arks-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: arks-gateway-plugins
  template:
    metadata:
      labels:
        app: arks-gateway-plugins
    spec:
      initContainers:
        - name: init-c
          image: busybox
          command: ['sh', '-c', 'until echo "ping" | nc arks-redis-master 6379 -w 1  | grep -c PONG; do echo waiting for service arks-redis-master; sleep 2; done']
      containers:
        - name: main
          # TODO: image update
          image: registry-ap-southeast.scitix.ai/k8s/arks-gateway-plugin:v1.0.0 
          imagePullPolicy: Always
          args:
            - -redis.addrs=arks-redis-master:6379
          ports:
            - containerPort: 50052
            - name: metrics
              containerPort: 8080
          resources:
            requests:
              cpu: 1
              memory: 1Gi
            limits:
              cpu: 1
              memory: 1Gi
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      serviceAccountName: arks-gateway-plugins
---
# this is a dummy route for incoming request and,
# then request is routed to httproute using model name OR
# request is routed based on the target for that model service
# TODO (varun): check if this dummy route can be removed in future
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: arks-reserved-router
  namespace: arks-operator-system
spec:
  parentRefs:
    - name: arks-eg
  rules:
    # TODO: match all routes?
    - matches:
        - path:
            type: PathPrefix
            value: /v1/chat/completions
        - path:
            type: PathPrefix
            value: /v1/completions
      # FIX: remove this 
      # backendRefs:
      #   - name: arks-gateway-plugins
      #     port: 50052
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyExtensionPolicy
metadata:
  name: gateway-plugins-extension-policy
  namespace: arks-operator-system
spec:
  targetRef:
    group: gateway.networking.k8s.io
    kind: Gateway
    name: arks-eg
    # FIX: use gateway instead of HTTPRoute
    # group: gateway.networking.k8s.io
    # kind: HTTPRoute
    # name: arks-reserved-router
  extProc:
    - backendRefs:
        - name: arks-gateway-plugins
          port: 50052
      processingMode:
        request:
          body: Buffered
        response: 
          body: Streamed
      messageTimeout: 5s

